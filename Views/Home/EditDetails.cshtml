@model OnlineShopping.Models.Signup

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditDetails</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <link href="~/Content/CSS/createForm.css" rel="stylesheet" />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <h4>Signup</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)
            <div class="form">
            <div class="input-box">
                @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>

            <div class="input-box">
                @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>

            <div class="input-box">
                @Html.LabelFor(model => model.dateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.dateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateOfBirth, "", new { @class = "text-danger" })
            </div>

            <div class="">

                @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-gender">

                    @Html.Label("Male")

                    @Html.RadioButtonFor(model => model.gender, "M", new { @class = "form-check-input" })
                    @Html.Label("Female")

                    @Html.RadioButtonFor(model => model.gender, "F", new { @class = "form-check-input" })
                </div>
            </div>

        <div class="input-box">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>

        <div class="input-box">
        @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })

        </div>

        <div class="input-box">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>

        <div class="input-box">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })

        </div>

        <div class="input-box">
            @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
        </div>

        <div class="input-box">
            @Html.LabelFor(model => model.pincode, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.pincode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pincode, "", new { @class = "text-danger" })
        </div>

        <div class="input-box">
            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
        </div>

        <div class="input-box">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
        </div>

        <div class="input-box">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
        </div>

        <div class="input-box">
            @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
            </div>

        <div class="form-group">
                <input type="submit" value="Save" class="button" />
            </div>
            </div>
            </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
